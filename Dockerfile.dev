# ==========================
# üßë‚Äçüíª Ambiente de Desenvolvimento
# ==========================
FROM node:20-alpine

# Cria diret√≥rio de trabalho
WORKDIR /app

# Copiar apenas os manifests para aproveitar cache de depend√™ncias
COPY package*.json ./

# Instalar depend√™ncias completas (inclui Prisma e dev tools)
RUN npm install --legacy-peer-deps

# Copiar o restante do c√≥digo (para build inicial)
COPY . .

# Copiar script de inicializa√ß√£o para desenvolvimento
COPY scripts/docker-dev-init.sh /app/scripts/docker-dev-init.sh
RUN chmod +x /app/scripts/docker-dev-init.sh

# Gera o Prisma Client (necess√°rio para rodar queries no modo dev)
RUN npx prisma generate

# Criar grupos e usu√°rios, e ajustar permiss√µes ‚Äî essencial para dev no Windows
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    mkdir -p /app/.next && \
    mkdir -p /app/uploads && \
    mkdir -p /app/uploads/capas && \
    mkdir -p /app/uploads/capitulos && \
    mkdir -p /app/uploads/temp && \
    chown -R nextjs:nodejs /app && \
    chmod -R 777 /app/uploads

USER nextjs

# Vari√°veis padr√£o (pode sobrescrever pelo docker-compose.dev.yml)
ENV NODE_ENV=development
ENV PORT=3000
EXPOSE 3000

# Usar script de inicializa√ß√£o que configura permiss√µes
CMD ["/app/scripts/docker-dev-init.sh"]
